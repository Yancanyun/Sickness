<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.emenu.mapper.party.group.employee.EmployeeMapper">

    <!-- 查询所有员工 -->
    <select id="listAll" resultType="Employee" parameterType="Integer" resultMap="pw.Employee">
        SELECT *
        FROM `t_party_employee`
        WHERE `status` != 3
        ORDER BY `created_time`
    </select>

    <select id="queryRoleByPartyId" parameterType="int" resultType="Integer">
        SELECT `role_id` AS `roleId`
        FROM `t_party_employee_role`
        WHERE `party_id` = #{partyId}
        ORDER BY `created_time`
    </select>


    <select id="queryByName" parameterType="String" resultMap="pw.Employee">
        SELECT `id`,
        `name`,
        `status`
        FROM `t_party_employee`
        WHERE `name` = #{employeeName} AND `status` != 3
    </select>

    <select id="listRoleByPartyId" parameterType="Integer"  resultMap="pw.EmployeeRole">
        SELECT `id` AS `id`,
        `party_id` AS `partyId`,
        `role_id` AS  `roleId`,
        `created_time` AS `createdTime`,
        `last_modified_time` AS `lastModifiedTime`
        from `t_party_employee_role`
        WHERE `party_id` = #{partyId} AND `status` != 3
        ORDER BY `created_time`
    </select>

    <update id="updateStatusByPartyId" >
        UPDATE `t_party_employee`
        SET `status` = #{status}
        WHERE `party_id` = #{partyId}
    </update>

    <delete id="delRoleByPartyId" parameterType="Integer" >
        DELETE FROM `t_party_employee_role`
        WHERE `party_id` = #{partyId}
    </delete>

    <delete id="delWaiterTableByPartyId" parameterType="integer">
        DELETE FROM `t_party_employee_waiter_table`
        WHERE `party_id` = #{partyId}
    </delete>

    <select id="queryByPartyId" parameterType="Integer" resultMap="pw.Employee">
        SELECT * from `t_party_employee`
        WHERE `party_id` = #{partyId} AND `status` != 3
    </select>

    <select id="queryByPartyIdWithoutDelete" parameterType="Integer" resultMap="pw.Employee">
        SELECT * from `t_party_employee`
        WHERE `party_id` = #{partyId}
    </select>


    <select id="listPartIdByRoles" parameterType="java.util.List" resultType="Integer">
        SELECT DISTINCT `party_id`
        from `t_party_employee_role`
        <where>
            `role_id` IN
            <if test="roles != null and roles.size > 0">
                <foreach collection="roles" index="index" item="roleId" open="(" separator="," close=")">
                    #{roleId}
                </foreach>
            </if>
            AND `status` != 3
        </where>
        ORDER BY `created_time`
    </select>

    <select id="queryByNumber" parameterType="String" resultMap="pw.Employee">
        SELECT * FROM `t_party_employee`
        WHERE `employee_number` = #{employeeNumber}
          AND `status` != 3
    </select>

    <select id="queryByPhone" parameterType="String" resultMap="pw.Employee">
         SELECT * FROM `t_party_employee` WHERE `phone` = #{phone} AND `status` != 3
    </select>

</mapper>

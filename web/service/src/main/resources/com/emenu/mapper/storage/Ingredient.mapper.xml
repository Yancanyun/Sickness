<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.emenu.mapper.storage.IngredientMapper">

    <select id="listAll" resultMap="pw.Ingredient">
        SELECT
        ingredient.`id` AS id,
        ingredient.`tag_id` AS tagId,
        tag.`name` AS tagName,
        ingredient.`name` AS name,
        ingredient.`ingredient_number` AS ingredientNumber,
        ingredient.`assistant_code` AS assistantCode,
        ingredient.`order_unit_id` AS orderUnitId,
        ingredient.`storage_unit_id` AS storageUnitId,
        ingredient.`cost_card_unit_id` AS costCardUnitId,
        ingredient.`order_to_storage_ratio` AS orderToStorageRatio,
        ingredient.`storage_to_cost_card_ratio` AS storageToCostCardRatio,
        ingredient.`max_storage_quantity` AS maxStorageQuantity,
        ingredient.`min_storage_quantity` AS minStorageQuantity,
        ingredient.`real_quantity` AS realQuantity,
        ingredient.`real_money` AS realMoney,
        ingredient.`total_quantity` AS totalQuantity,
        ingredient.`total_money` AS totalMoney,
        ingredient.`average_price` AS averagePrice,
        ingredient.`created_time` AS createdTime,
        ingredient.`last_modified_time` AS lastModifiedTime
        FROM `t_ingredient` AS ingredient
        LEFT JOIN `t_tag` AS tag ON ingredient.`tag_id` = tag.`id`
        WHERE ingredient.`status` != 2
        ORDER BY ingredient.`tag_id` ASC, ingredient.`id` ASC
    </select>

    <select id="listBySearchDto" resultMap="pw.Ingredient">
        SELECT
        ingredient.`id` AS id,
        ingredient.`tag_id` AS tagId,
        tag.`name` AS tagName,
        ingredient.`name` AS name,
        ingredient.`ingredient_number` AS ingredientNumber,
        ingredient.`assistant_code` AS assistantCode,
        ingredient.`order_unit_id` AS orderUnitId,
        ingredient.`storage_unit_id` AS storageUnitId,
        ingredient.`cost_card_unit_id` AS costCardUnitId,
        ingredient.`order_to_storage_ratio` AS orderToStorageRatio,
        ingredient.`storage_to_cost_card_ratio` AS storageToCostCardRatio,
        ingredient.`max_storage_quantity` AS maxStorageQuantity,
        ingredient.`min_storage_quantity` AS minStorageQuantity,
        ingredient.`real_quantity` AS realQuantity,
        ingredient.`real_money` AS realMoney,
        ingredient.`total_quantity` AS totalQuantity,
        ingredient.`total_money` AS totalMoney,
        ingredient.`average_price` AS averagePrice,
        ingredient.`created_time` AS createdTime,
        ingredient.`last_modified_time` AS lastModifiedTime
        FROM `t_ingredient` AS ingredient
        LEFT JOIN `t_tag` AS tag ON ingredient.`tag_id` = tag.`id`
        <where>
            <if test="searchDto != null">
                <if test="searchDto.keyword != null and searchDto.keyword != '' ">
                    (
                    ingredient.`name` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`assistant_code` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`ingredient_number` LIKE "%"#{searchDto.keyword}"%"
                    )
                </if>
                <if test="searchDto.tagIdList != null and searchDto.tagIdList.size > 0">
                    AND ingredient.`tag_id` IN
                    <foreach item="tagId" collection="searchDto.tagIdList" open="(" separator="," close=")">
                        #{tagId}
                    </foreach>
                </if>
            </if>
            AND ingredient.`status` != 2
        </where>
        ORDER BY ingredient.`tag_id` ASC, ingredient.`id` ASC
        <if test="searchDto != null and searchDto.offset >= 0 and searchDto.pageSize >= 0">
            LIMIT #{searchDto.offset},#{searchDto.pageSize}
        </if>
    </select>

    <select id="listDetailsBySearchDto" resultMap="pw.Ingredient">
        SELECT
        ingredient.`id` AS id,
        ingredient.`tag_id` AS tagId,
        tag.`name` AS tagName,
        ingredient.`name` AS name,
        ingredient.`ingredient_number` AS ingredientNumber,
        ingredient.`assistant_code` AS assistantCode,
        ( SELECT unit.name FROM t_unit AS unit WHERE unit.id=ingredient.order_unit_id) AS orderUnitName,
        ( SELECT unit.name FROM t_unit AS unit WHERE unit.id=ingredient.storage_unit_id) AS storageUnitName,
        ( SELECT unit.name FROM t_unit AS unit WHERE unit.id=ingredient.cost_card_unit_id) AS costCardUnitName,
        ingredient.`order_to_storage_ratio` AS orderToStorageRatio,
        ingredient.`storage_to_cost_card_ratio` AS storageToCostCardRatio,
        ingredient.`max_storage_quantity` AS maxStorageQuantity,
        ingredient.`min_storage_quantity` AS minStorageQuantity,
        ingredient.`real_quantity` AS realQuantity,
        ingredient.`real_money` AS realMoney,
        ingredient.`total_quantity` AS totalQuantity,
        ingredient.`total_money` AS totalMoney,
        ingredient.`average_price` AS averagePrice,
        ingredient.`created_time` AS createdTime,
        ingredient.`last_modified_time` AS lastModifiedTime
        FROM `t_ingredient` AS ingredient
        LEFT JOIN `t_tag` AS tag ON ingredient.`tag_id` = tag.`id`
        <where>
            <if test="searchDto != null">
                <if test="searchDto.keyword != null and searchDto.keyword != '' ">
                    (
                    ingredient.`name` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`assistant_code` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`ingredient_number` LIKE "%"#{searchDto.keyword}"%"
                    )
                </if>
                <if test="searchDto.tagIdList != null and searchDto.tagIdList.size > 0">
                    AND ingredient.`tag_id` IN
                    <foreach item="tagId" collection="searchDto.tagIdList" open="(" separator="," close=")">
                        #{tagId}
                    </foreach>
                </if>
            </if>
            AND ingredient.`status` != 2
        </where>
        ORDER BY ingredient.`tag_id` ASC, ingredient.`id` ASC
        <if test="searchDto.offset >= 0 and searchDto.pageSize >= 0">
            LIMIT #{searchDto.offset},#{searchDto.pageSize}
        </if>
    </select>


    <select id="countBySearchDto" resultType="int">
        SELECT
        COUNT(ingredient.`id`)
        FROM `t_ingredient` AS ingredient
        <where>
            <if test="searchDto != null">
                <if test="searchDto.keyword != null and searchDto.keyword != '' ">
                    (
                    ingredient.`name` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`assistant_code` LIKE "%"#{searchDto.keyword}"%"
                    OR ingredient.`ingredient_number` LIKE "%"#{searchDto.keyword}"%"
                    )
                </if>
                <if test="searchDto.tagIdList != null and searchDto.tagIdList.size > 0">
                    AND ingredient.`tag_id` IN
                    <foreach item="tagId" collection="searchDto.tagIdList" open="(" separator="," close=")">
                        #{tagId}
                    </foreach>
                </if>
            </if>
            AND ingredient.`status` != 2
        </where>
    </select>

    <select id="coutByName" resultType="int">
        SELECT
        COUNT(ingredient.`id`)
        FROM `t_ingredient` AS ingredient
        WHERE ingredient.`name` = #{name}
    </select>

    <update id="updateIngredient">
          UPDATE `t_ingredient`
            SET
                `name` = #{ingredient.name},
                `assistant_code` = #{ingredient.assistantCode},
                `tag_id` = #{ingredient.tagId},
                `order_unit_id` = #{ingredient.orderUnitId},
                `storage_unit_id` = #{ingredient.storageUnitId},
                `cost_card_unit_id` = #{ingredient.costCardUnitId},
                `order_to_storage_ratio` = #{ingredient.orderToStorageRatio},
                `storage_to_cost_card_ratio` = #{ingredient.storageToCostCardRatio},
                `max_storage_quantity` = #{ingredient.maxStorageQuantity},
                `min_storage_quantity` = #{ingredient.minStorageQuantity}
          WHERE `id` = #{ingredient.id};
    </update>

    <update id="updateIngredientStatusById">
          UPDATE `t_ingredient`
            SET  `status` = #{status}
          WHERE `id` = #{id};
    </update>

    <update id="updateIngredientCodeAndLimitById">
          UPDATE `t_ingredient`
            SET `max_storage_quantity` = #{ingredient.maxStorageQuantity},
                `min_storage_quantity` = #{ingredient.minStorageQuantity}
          WHERE `id` = #{ingredient.id};
    </update>

    <select id="listByKeyword" resultMap="pw.Ingredient">
        SELECT
        ingredient.`id` AS id,
        ingredient.`tag_id` AS tagId,
        tag.`name` AS tagName,
        ingredient.`name` AS name,
        ingredient.`ingredient_number` AS ingredientNumber,
        ingredient.`assistant_code` AS assistantCode,
        ingredient.`order_unit_id` AS orderUnitId,
        ingredient.`storage_unit_id` AS storageUnitId,
        ingredient.`cost_card_unit_id` AS costCardUnitId,
        ingredient.`order_to_storage_ratio` AS orderToStorageRatio,
        ingredient.`storage_to_cost_card_ratio` AS storageToCostCardRatio,
        ingredient.`max_storage_quantity` AS maxStorageQuantity,
        ingredient.`min_storage_quantity` AS minStorageQuantity,
        ingredient.`real_quantity` AS realQuantity,
        ingredient.`real_money` AS realMoney,
        ingredient.`total_quantity` AS totalQuantity,
        ingredient.`total_money` AS totalMoney,
        ingredient.`average_price` AS averagePrice,
        ingredient.`created_time` AS createdTime,
        ingredient.`last_modified_time` AS lastModifiedTime
        FROM `t_ingredient` AS ingredient
        LEFT JOIN `t_tag` AS tag ON ingredient.`tag_id` = tag.`id`
        WHERE ingredient.`name` LIKE "%"#{keyword}"%"
              OR ingredient.`assistant_code` LIKE "%"#{keyword}"%"
              OR ingredient.`ingredient_number` LIKE "%"#{keyword}"%"
    </select>
</mapper>